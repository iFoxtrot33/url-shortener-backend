// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/links": {
            "get": {
                "description": "Get details of a specific shortened link by hash",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "links"
                ],
                "summary": "Get link details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID of the link owner",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Hash of the shortened link",
                        "name": "hash",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Link details",
                        "schema": {
                            "$ref": "#/definitions/link.Link"
                        }
                    },
                    "400": {
                        "description": "Missing parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Link not found or user does not have access",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new shortened link",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "links"
                ],
                "summary": "Create a new shortened link",
                "parameters": [
                    {
                        "description": "Data for creating a link",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/link.LinkCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created link",
                        "schema": {
                            "$ref": "#/definitions/link.Link"
                        }
                    },
                    "400": {
                        "description": "Error in request parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "User ID not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "Hash already exists",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a shortened link by hash",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "links"
                ],
                "summary": "Delete a shortened link",
                "parameters": [
                    {
                        "description": "Data for deleting a link",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/link.LinkDeleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Link deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Error in request parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Link not found or user does not have permission",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Link not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/links/add-days": {
            "post": {
                "description": "Increases the lifetime of all links belonging to a user by 1 day",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "links"
                ],
                "summary": "Add days to all user links",
                "parameters": [
                    {
                        "description": "User ID",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/link.AddDaysRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message with number of updated links",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Error in request parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/links/all": {
            "get": {
                "description": "Get a list of all links belonging to a user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "links"
                ],
                "summary": "Get all user links",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of links",
                        "schema": {
                            "$ref": "#/definitions/link.GetAllLinksResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/{hash}": {
            "get": {
                "description": "Redirects to the original URL using the provided hash",
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "links"
                ],
                "summary": "Redirect to original URL",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Hash of the shortened link",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Redirect to the original URL",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Hash parameter is missing",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Link not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "link.AddDaysRequest": {
            "type": "object",
            "required": [
                "user_id"
            ],
            "properties": {
                "user_id": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                }
            }
        },
        "link.GetAllLinksResponse": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer",
                    "example": 10
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/link.Link"
                    }
                },
                "page": {
                    "type": "integer",
                    "example": 1
                },
                "total_links": {
                    "type": "integer",
                    "example": 42
                },
                "total_pages": {
                    "type": "integer",
                    "example": 5
                }
            }
        },
        "link.Link": {
            "description": "Shortened link model",
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2025-04-23T00:00:00Z"
                },
                "deleted_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "hash": {
                    "type": "string",
                    "example": "abc123"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "lifetime": {
                    "type": "integer",
                    "example": 90
                },
                "number_of_clicks": {
                    "type": "integer",
                    "example": 42
                },
                "updated_at": {
                    "type": "string",
                    "example": "2025-04-23T00:00:00Z"
                },
                "url": {
                    "type": "string",
                    "example": "https://example.com"
                },
                "user_id": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                }
            }
        },
        "link.LinkCreateRequest": {
            "type": "object",
            "required": [
                "url"
            ],
            "properties": {
                "hash": {
                    "type": "string",
                    "example": "custom123"
                },
                "url": {
                    "type": "string",
                    "example": "https://example.com"
                },
                "user_id": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                }
            }
        },
        "link.LinkDeleteRequest": {
            "type": "object",
            "required": [
                "hash",
                "user_id"
            ],
            "properties": {
                "hash": {
                    "type": "string",
                    "example": "abc123"
                },
                "user_id": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "2.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "URL Shortener API",
	Description:      "API for shortening URLs and managing shortened links",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
